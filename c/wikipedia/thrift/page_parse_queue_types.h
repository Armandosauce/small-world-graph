/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
#ifndef page_parse_queue_TYPES_H
#define page_parse_queue_TYPES_H

#include <Thrift.h>
#include <protocol/TProtocol.h>
#include <transport/TTransport.h>





class RawPage {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  RawPage() : title(""), content("") {
  }

  virtual ~RawPage() throw() {}

  std::string title;
  std::string content;

  struct __isset {
    __isset() : title(false), content(false) {}
    bool title;
    bool content;
  } __isset;

  bool operator == (const RawPage & rhs) const
  {
    if (!(title == rhs.title))
      return false;
    if (!(content == rhs.content))
      return false;
    return true;
  }
  bool operator != (const RawPage &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const RawPage & ) const;

  uint32_t read(apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(apache::thrift::protocol::TProtocol* oprot) const;

};

class QueueFullException : public apache::thrift::TException {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  QueueFullException() {
  }

  virtual ~QueueFullException() throw() {}


  bool operator == (const QueueFullException & /* rhs */) const
  {
    return true;
  }
  bool operator != (const QueueFullException &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const QueueFullException & ) const;

  uint32_t read(apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(apache::thrift::protocol::TProtocol* oprot) const;

};



#endif
